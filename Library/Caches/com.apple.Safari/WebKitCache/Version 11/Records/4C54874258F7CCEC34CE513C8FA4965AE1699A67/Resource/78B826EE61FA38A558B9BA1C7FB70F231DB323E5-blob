<!DOCTYPE html>
<html data-xml-lang="en" data-loc="1" data-document-status="ok">
<head data-loc="2">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<base href="/xhtml/ch23.html" target="_blank">
<title data-loc="3">Angels Walking</title>
<link rel="stylesheet" type="text/css" href="../styles/9781451687491.css" data-loc="4">
<meta name="generator" content="odnorm-normalized">
</head>
<body><script type="text/javascript">parent.__bif_cfc0(self,'')</script></body>
</html>
